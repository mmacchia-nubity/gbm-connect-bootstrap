name: Bootstrap Pipelines

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: us-west-2
  AWS_ACCOUNT_ID: "825765398662"

jobs:
  validate:
    name: Validate templates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install cfn-lint

      - name: Validate templates
        run: cfn-lint templates/*.yaml

  deploy-stg:
    name: Deploy STG
    runs-on: ubuntu-latest
    needs: validate
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/gbm-connect-bootstrap-oidc-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Load STG parameters from SSM
        run: |
          set -e
          echo "Loading parameters from SSM..."
          echo "ARTIFACT_BUCKET=$(aws ssm get-parameter --name /gbm/stg/artifact-bucket --query Parameter.Value --output text)" >> $GITHUB_ENV
          echo "PIPELINE_ROLE=$(aws ssm get-parameter --name /gbm/stg/pipeline-role --query Parameter.Value --output text)" >> $GITHUB_ENV
          echo "BUILD_ROLE=$(aws ssm get-parameter --name /gbm/stg/build-role --query Parameter.Value --output text)" >> $GITHUB_ENV
          echo "RELEASE_ROLE=$(aws ssm get-parameter --name /gbm/stg/release-role --query Parameter.Value --output text)" >> $GITHUB_ENV
          TOKEN=$(aws ssm get-parameter --name /gbm/github/token --with-decryption --query Parameter.Value --output text --region $AWS_REGION)
          echo "Token length: ${#TOKEN}"
          if [ -z "$TOKEN" ]; then
            echo "❌ ERROR: GitHub token is empty, check SSM permissions or value."
            exit 1
          fi
          echo "GITHUB_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Deploy buckets
        run: |
          aws cloudformation deploy \
            --template-file templates/buckets.yaml \
            --stack-name gbm-connect-buckets-stg \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides Environment=stg

      - name: Deploy pipeline STG
        run: |
          aws cloudformation deploy \
            --template-file templates/pipelines-stg.yaml \
            --stack-name gbm-connect-pipeline-stg \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              GitHubOwner=mmacchia-nubity \
              GitHubRepo=pser-gbm-sfdc-integration \
              Environment=stg \
              ArtifactsBucket=$ARTIFACT_BUCKET \
              PipelineRoleArn=$PIPELINE_ROLE \
              BuildRoleArn=$BUILD_ROLE \
              ReleaseRoleArn=$RELEASE_ROLE \
              GitHubToken=$GITHUB_TOKEN


  deploy-prd:
    name: Deploy PRD
    runs-on: ubuntu-latest
    needs: deploy-stg
    environment:
      name: production
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/gbm-connect-bootstrap-oidc-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Load PRD parameters from SSM
        run: |
          echo "ARTIFACT_BUCKET=$(aws ssm get-parameter --name /gbm/prd/artifact-bucket --query Parameter.Value --output text)" >> $GITHUB_ENV
          echo "PIPELINE_ROLE=$(aws ssm get-parameter --name /gbm/prd/pipeline-role --query Parameter.Value --output text)" >> $GITHUB_ENV
          echo "BUILD_ROLE=$(aws ssm get-parameter --name /gbm/prd/build-role --query Parameter.Value --output text)" >> $GITHUB_ENV

      - name: Deploy buckets
        run: |
          aws cloudformation deploy \
            --template-file templates/buckets.yaml \
            --stack-name gbm-connect-buckets-prd \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides Environment=prd

      - name: Deploy pipeline PRD
        run: |
          aws cloudformation deploy \
            --template-file templates/pipelines-prd.yaml \
            --stack-name gbm-connect-pipeline-prd \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              GitHubOwner=mmacchia-nubity \
              GitHubRepo=pser-gbm-sfdc-integration \
              Environment=prd \
              ArtifactsBucket=$ARTIFACT_BUCKET \
              PipelineRoleArn=$PIPELINE_ROLE \
              BuildRoleArn=$BUILD_ROLE