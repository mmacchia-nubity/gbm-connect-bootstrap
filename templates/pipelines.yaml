AWSTemplateFormatVersion: '2010-09-09'
Description: CI/CD Pipelines for GBM Connect

Parameters:
  Environment:
    Type: String
    AllowedValues: [stg, prd]
    Description: Environment name
  
  GitHubOwner:
    Type: String
    Default: "gbmcode"
  
  GitHubRepo:
    Type: String
    Default: "gbm-connect"
  
  PipelineRoleArn:
    Type: String
    Description: ARN of the pipeline service role
  
  BuildRoleArn:
    Type: String
    Description: ARN of the build service role
  
  ReleaseRoleArn:
    Type: String
    Description: ARN of the release service role (STG only)
    Default: ""
  
  ArtifactsBucket:
    Type: String
    Description: S3 bucket for pipeline artifacts

Conditions:
  IsStaging: !Equals [!Ref Environment, "stg"]

Resources:
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "gbm-connect-build-${Environment}"
      ServiceRole: !Ref BuildRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: !If 
          - IsStaging
          - "buildspec-stage.yml"
          - "buildspec-prd.yml"

  ReleaseProject:
    Type: AWS::CodeBuild::Project
    Condition: IsStaging
    Properties:
      Name: gbm-connect-release
      ServiceRole: !Ref ReleaseRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-create-tag.yml

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "gbm-connect-pipeline-${Environment}"
      RoleArn: !Ref PipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !If 
                  - IsStaging
                  - "master"
                  - "refs/tags/*"
                OAuthToken: "{{resolve:secretsmanager:github/token:SecretString:token}}"
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
        - !If
          - IsStaging
          - Name: Approval
            Actions:
              - Name: ManualApproval
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Provider: Manual
                  Version: 1
                Configuration:
                  CustomData: "Review staging build before creating release"
          - !Ref "AWS::NoValue"
        - !If
          - IsStaging
          - Name: Release
            Actions:
              - Name: CreateTag
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: 1
                Configuration:
                  ProjectName: !Ref ReleaseProject
                InputArtifacts:
                  - Name: SourceArtifact
          - !Ref "AWS::NoValue"

Outputs:
  PipelineName:
    Description: Pipeline name
    Value: !Ref Pipeline
    Export:
      Name: !Sub "${AWS::StackName}-Pipeline"